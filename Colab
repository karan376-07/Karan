# Step 1: Install and import necessary libraries
!pip install pandas seaborn scikit-learn matplotlib --quiet

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Step 2: Load your dataset (Replace this with your file or a sample dataset)
# For demo purposes, let's create a sample survey dataset
data = {
    'Product_Quality': [8, 9, 6, 7, 9, 8, 6, 7, 9, 5],
    'Delivery_Speed': [7, 6, 8, 6, 9, 7, 5, 8, 6, 4],
    'Customer_Service': [9, 8, 6, 7, 9, 8, 7, 6, 9, 5],
    'Price_Satisfaction': [6, 7, 5, 7, 8, 7, 4, 6, 7, 5],
    'Website_Experience': [7, 8, 6, 7, 9, 8, 6, 7, 8, 5],
    'Customer_Satisfaction': [8, 9, 6, 7, 9, 8, 6, 7, 9, 5]
}

df = pd.DataFrame(data)

# Step 3: Exploratory Data Analysis
print("Data Overview:\n", df.head())

# Correlation Heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Step 4: Identify Key Drivers using Feature Importance
X = df.drop('Customer_Satisfaction', axis=1)
y = df['Customer_Satisfaction']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestRegressor(random_state=42)
model.fit(X_train, y_train)

# Evaluate model
y_pred = model.predict(X_test)
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))

# Feature Importance
importances = model.feature_importances_
features = X.columns

# Visualize
plt.figure(figsize=(8, 5))
sns.barplot(x=importances, y=features)
plt.title("Feature Importance - Key Drivers of Customer Satisfaction")
plt.xlabel("Importance Score")
plt.ylabel("Feature")
plt.show()
